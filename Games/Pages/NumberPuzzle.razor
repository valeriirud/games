@page "/numberpuzzle"
@inherits NumberPuzzleBase

@{
    var id = 1;
}
@if (GameFields is not null)
{    
    <div class="layout">
        
        <div class="grid">
            <div class="input-group">
                <input class="btn btn-primary unfocus" type="button" value="New Game" onclick="@(() => NewGame())">
                <input class="form-control-plaintext timecontrol" type="text" readonly value="@CurrentTime">
                <select class="selectpicker" @bind="GameMode">
                  <option>4x4</option>
                  <option>3x3</option>
                  <option>5x5</option>
                </select>
            </div>
            @for (var col = 0; col < @AreaSize; col++)
            {
                <div class="column">
                    @for (var row = 0; row < @AreaSize; row++)
                    {
                        var index = id;
                        var s = "none";
                        GameField? gameField = GameFields.FirstOrDefault(gf => gf.Index == id);
                        @if (gameField is not default(GameField) && gameField.Value > 0)
                        {
                            s = "red";
                        }    
                        <div class="space">
                            <div class="piece-@s" 
                                onmousedown="@(() => OnMouseDown(index))" @onmousedown:preventDefault 
                                onmouseup="@(() => OnMouseUp(index))" @onmouseup:preventDefault 
                                onclick="@(() => OnClick(index))" >
                                @if (s.Equals("red"))
                                {
                                    <div class="child">@gameField?.Value</div>
                                }
                            </div>
                        </div>
                        id++;
                    }                
                </div>
            }
        </div>
    </div>
}